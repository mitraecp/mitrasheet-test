import{ac as i,ad as s,j as I}from"./entry.102678be.js";const E="dataset",G="datasetContent";function L(){const{baseURL:o,mergePayload:m}=f();return{addDataset:async(A,u)=>{const{data:l,pending:n,error:a}=await i(`${E}`,{body:A,method:"POST",params:u,serviceName:s.DATAMANAGEMENT});return{dataset:l==null?void 0:l.value,datasetSaving:n,error:a.value}},getDatasets:async A=>{const{data:u,pending:l,error:n}=await i(`${o!=null&&o.length?"simpleDatasets":E}`,m({params:A,serviceName:s.DATAMANAGEMENT,serviceMerge:s.DATASET}));return{datasets:u==null?void 0:u.value,datasetSaving:l,error:n.value}},getDatasetsTree:async A=>{const{data:u,pending:l,error:n}=await i(`${E}/tree`,{params:A,serviceName:s.DATAMANAGEMENT});return{treeDatasets:u==null?void 0:u.value,datasetSaving:l,error:n.value}},getDatasetContent:async(A,u)=>{const{data:l,pending:n,error:a}=await i(`${o!=null&&o.length?"":G}/${A}`,m({query:{limit:50},...u,serviceName:s.DATAMANAGEMENT,serviceMerge:s.DATASETCONTENT})),e=l==null?void 0:l.value;return{datasetDataView:{contents:e.contents,headers:e.headers},rowCount:e.rowCount,datasetSaving:n,error:a.value}},saveDatasetContent:async A=>{const{data:u,pending:l,error:n}=await i(`${o!=null&&o.length?"":G}`,m({body:A,method:"POST",serviceName:s.DATAMANAGEMENT,serviceMerge:s.DATASETCONTENT}));return{content:u==null?void 0:u.value,deletedLines:[],datasetSaving:l,error:n.value}},putDatasetContent:async A=>{const{data:u,pending:l,error:n}=await i(`${G}`,{body:A,method:"PUT",serviceName:s.DATAMANAGEMENT});return{deletedLines:(u==null?void 0:u.value).deleted,datasetSaving:l,error:n.value}},deleteDatasetMetric:async({datasetId:A,metricId:u})=>{const{error:l}=await i(`${E}/deleteMetric/${A}/${u}`,{method:"DELETE",serviceName:s.DATAMANAGEMENT});return{error:l.value}},addDatasetMetric:async A=>{const{error:u,data:l}=await i(`${E}/addMetric`,{method:"POST",serviceName:s.DATAMANAGEMENT,body:A});return{data:l==null?void 0:l.value,error:u.value}},deleteDatasetRow:async(A,u)=>{const{error:l}=await i(`${G}/${A}/${u}`,{method:"DELETE",serviceName:s.DATAMANAGEMENT});return{error:l.value}},deleteDataset:async A=>{const{error:u}=await i(`${E}/${A}`,{method:"DELETE",serviceName:s.DATAMANAGEMENT});return{error:u.value}},putDataset:async(A,u)=>{const{data:l,pending:n,error:a}=await i(`${E}`,{body:A,method:"PUT",params:u,serviceName:s.DATAMANAGEMENT});return{dataset:l==null?void 0:l.value,datasetSaving:n,error:a.value}}}}const U="nativeDimensions",O="dimensionContent",p="dimension";function P(){const{baseURL:o,mergePayload:m}=f();return{putContentAttribute:async(e,t)=>{const{data:r,pending:d,error:g}=await i(`${p}/attribute/${e}`,{body:t,method:"PUT",serviceName:s.DATAMANAGEMENT});return{value:r==null?void 0:r.value,dimensionUpdating:d,error:g.value}},deleteContentAttribute:async e=>{const{pending:t,error:r}=await i(`${p}/attribute/${e}`,{method:"DELETE",serviceName:s.DATAMANAGEMENT});return{dimensionUpdating:t,error:r.value}},deleteAttributeOption:async e=>{const{data:t,pending:r,error:d}=await i(`${p}/optionAttribute/${e.attributeId}/${e.optionId}`,{method:"DELETE",serviceName:s.DATAMANAGEMENT});return{value:t.value,dimensionUpdating:r,error:d.value}},getNativeDimensions:async e=>{const{data:t,pending:r,error:d}=await i(`${U}`,{params:e});return{dimensions:t==null?void 0:t.value,loadingDimensions:r,error:d.value}},postAttributeOption:async e=>{const{data:t,pending:r,error:d}=await i(`${p}/optionAttribute `,{body:e,method:"POST",serviceName:s.DATAMANAGEMENT});return{value:t==null?void 0:t.value,dimensionUpdating:r,error:d.value}},getDimensionContent:async(e,t,r)=>{const{data:d,pending:g,error:C}=await i(`${o?"":O}/${e}${r?"?onlyPrimaryAttribute=true":""}`,m({...t,serviceName:s.DATAMANAGEMENT,serviceMerge:s.DOMENSIONCONTENT}));return{dimensionDataView:d==null?void 0:d.value,dimensionUpdating:g,error:C.value}},postContentAttribute:async e=>{const{data:t,pending:r,error:d}=await i(`${p}/attribute`,{body:e,method:"POST",serviceName:s.DATAMANAGEMENT});return{value:t==null?void 0:t.value,dimensionUpdating:r,error:d.value}},putDimensionContent:async e=>{const{data:t,pending:r,error:d}=await i(`${o?"":O}`,m({body:e,method:"PUT",serviceName:s.DATAMANAGEMENT,serviceMerge:s.DOMENSIONCONTENT}));return{updateInfo:t==null?void 0:t.value,dimensionUpdating:r,error:d.value}},deleteContentRow:async(e,t)=>{const{pending:r,error:d}=await i(`${o?"":O}/${e}/${t}`,m({method:"DELETE",serviceName:s.DATAMANAGEMENT,serviceMerge:s.DOMENSIONCONTENT}));return{dimensionUpdating:r,error:d.value}},deleteDimension:async e=>{const{pending:t,error:r}=await i(`${p}/${e}`,{method:"DELETE",serviceName:s.DATAMANAGEMENT});return{deletedId:e,dimensionDeleting:t,error:r.value}},postContentRow:async e=>{const{data:t,pending:r,error:d}=await i(`${o?"":O}`,m({body:{dimensionId:e},method:"POST",serviceName:s.DATAMANAGEMENT,serviceMerge:s.DOMENSIONCONTENT}));return{content:t==null?void 0:t.value,dimensionUpdating:r,error:d.value}},getDimensions:async e=>{const{data:t,pending:r,error:d}=await i(`${o!=null&&o.length?"simpleDimensions":p}`,m({params:e,serviceName:s.DATAMANAGEMENT,serviceMerge:s.DIMENSIONS}));return{dimensions:t==null?void 0:t.value,loadingDimensions:r,error:d.value}},getDimensionsTree:async e=>{const{data:t,pending:r,error:d}=await i(`${o!=null&&o.length?"":p}/tree`,m({params:e,serviceName:s.DATAMANAGEMENT,serviceMerge:s.DIMENSIONS}));return{treeDimensions:t==null?void 0:t.value,loadingDimensions:r,error:d.value}},putDimension:async(e,t)=>{const{data:r,pending:d,error:g}=await i(`${p}`,{body:e,method:"PUT",params:t,serviceName:s.DATAMANAGEMENT});return{dimension:r==null?void 0:r.value,dimensionUpdating:d,error:g.value}},addDimension:async(e,t)=>{const{data:r,pending:d,error:g}=await i(`${p}`,{body:e,method:"POST",params:t,serviceName:s.DATAMANAGEMENT});return{dimension:r==null?void 0:r.value,dimensionSaving:d,error:g.value}},getDimensionById:async e=>{const{data:t,pending:r,error:d}=await i(`${p}/${e}`,{serviceName:s.DATAMANAGEMENT});return{dimension:t==null?void 0:t.value,loadingDimensions:r,error:d.value}}}}function f(){var M;const o=(M=I().merge)==null?void 0:M.backURL,m=c=>{var v;return o&&(c.userToken=`Bearer ${(v=I().merge)==null?void 0:v.userToken}`,c.baseURL=o,c.serviceName=c.serviceMerge),c},N={Number:"DOUBLE",SingleLineText:"VARCHAR",Date:"DATE"},y=c=>({cubeGroup:"Atribute Group",dataType:N[c.dimensionAttributeType],dimensionsId:[c.dimensionId],encrypted:!1,name:c.name,isSingleSelect:c.dimensionAttributeType==="SingleChoice"});async function w(c,v){const{data:T,error:D}=await(o?S().postContentAttribute({cubeGroup:"Atribute Group",dataType:N[c.type],dimensionsId:v,encrypted:!1,name:c.name}):await L().addDatasetMetric(c));return{data:{id:T==null?void 0:T.id,dataType:c.type,dimensionAttributeType:c.type,metricName:c.name},error:D}}async function h(c){var A;const v=[],{value:T,error:D}=await(o?S().postContentAttribute(y(c)):P().postContentAttribute(c));return o&&c.dimensionAttributeType==="SingleChoice"&&((A=c.options)==null?void 0:A.length)?(await new Promise(l=>{var n;return(n=c.options)==null?void 0:n.map(async(a,e)=>{var d;const{dimension:t,error:r}=await S().addDimension({name:a.label,sonId:T.id});r||v.push({value:t.id,label:t.name}),e+1===((d=c.options)==null?void 0:d.length)&&l()})}),{value:{...T,dimensionAttributeType:c.dimensionAttributeType,options:v},error:D}):{value:{...T,dimensionAttributeType:c.dimensionAttributeType},error:D}}async function b(c){var T;o&&((T=c.options)==null?void 0:T.length)&&await new Promise(D=>{var A;return(A=c.options)==null?void 0:A.map(async(u,l)=>{var n;await S().deleteContentAttribute({id:u.value,type:"dimension"}),l+1===((n=c.options)==null?void 0:n.length)&&D()})});const{error:v}=await(o?S().deleteContentAttribute({id:c.id,type:["SingleChoice","SingleLinkDimension"].includes(c.dimensionAttributeType)?"dimension":"cube"}):P().deleteContentAttribute(c.id));return{error:v}}async function $(c,v){const{error:T}=await(o?S().putContentAttribute(v,["SingleChoice","SingleLinkDimension","MultiLinkDimension"].includes(`${v==null?void 0:v.dimensionAttributeType}`)?"dimension":"cube"):P().putContentAttribute(c,v));return{error:T}}return{baseURL:o,mergePayload:m,mergeAttributePayload:y,postContentAttribute:h,deleteContentAttribute:b,putContentAttribute:$,addDatasetMetric:w}}function S(){const{mergePayload:o}=f(),{merge:m}=I(),N=async n=>{const{data:a,pending:e,error:t}=await i(`${s.MODULE}/withScreens`,o({method:"GET",params:n}));return{data:a==null?void 0:a.value,datasetSaving:e,error:t.value}},y=async n=>{const{data:a,pending:e,error:t}=await i(`${s.MODULE}?username=${m==null?void 0:m.userEmail}`,o({method:"GET",params:n}));return{data:a==null?void 0:a.value,datasetSaving:e,error:t.value}},w=async(n,a)=>{const{data:e,pending:t,error:r}=await i(`${s.SCREEN}?moduleId=${n}`,o({method:"GET",params:a}));return{data:e==null?void 0:e.value,datasetSaving:t,error:r.value}},h=async(n,a)=>{const{data:e,pending:t,error:r}=await i("/screen",o({body:n,method:"POST",params:a}));return{data:e==null?void 0:e.value,datasetSaving:t,error:r.value}},b=async(n,a)=>{const{data:e,pending:t,error:r}=await i("/module",o({body:n,method:"POST",params:a}));return{data:e==null?void 0:e.value,datasetSaving:t,error:r.value}},$=async(n,a)=>{const{data:e,pending:t,error:r}=await i("/module",o({body:n,method:"PUT",params:a}));return{data:e==null?void 0:e.value,datasetSaving:t,error:r.value}},M=async(n,a)=>{const{pending:e,error:t}=await i(`/module/${n}`,o({method:"DELETE",params:a}));return{datasetSaving:e,error:t.value}},c=async(n,a)=>{const{data:e,pending:t,error:r}=await i("/screen/screenName",o({body:n,method:"PUT",params:a}));return{data:e==null?void 0:e.value,datasetSaving:t,error:r.value}},v=async n=>{const{data:a,pending:e,error:t}=await i("/dimension",o({body:{...n,idDataType:"Int"},method:"POST"}));return{dimension:a==null?void 0:a.value,dimensionSaving:e,error:t.value}};return{getModuleList:y,getScreenList:w,getAll:N,saveScreen:h,createModule:b,deleteModule:M,renameModule:$,updateScreenName:c,addDimension:v,addDataset:async(n,a)=>{var d,g;const{data:e,pending:t,error:r}=await i("",o({body:{name:n.name,cubeGroup:"Atribute Group",dataType:"DOUBLE",dimensionsId:[...(g=(d=n.datasetDimensions)==null?void 0:d.map(C=>C.dimensionId))!=null?g:[]],encrypted:!1},method:"POST",params:a,serviceMerge:s.DATASET}));return(e==null?void 0:e.value).id=(e==null?void 0:e.value).dataSetId,{dataset:e==null?void 0:e.value,datasetSaving:t,error:r.value}},postContentAttribute:async n=>{if(!n.dataType){const{dimension:r,error:d}=await v({name:n.name,sonId:n.dimensionsId[0],isSingleSelect:n.isSingleSelect});return{value:r,error:d}}const{data:a,pending:e,error:t}=await i("/cube",o({body:n,method:"POST"}));return{data:a==null?void 0:a.value,value:a==null?void 0:a.value,dimensionUpdating:e,error:t.value}},deleteContentAttribute:async({id:n,type:a})=>{var r;const{pending:e,error:t}=await i(`/${a}/${(r=n.id)!=null?r:n}`,o({method:"DELETE"}));return{deleteSaving:e,error:t.value}},putContentAttribute:async(n,a)=>{var g;const{data:e}=await i(`/${a}/${(g=n==null?void 0:n.id.id)!=null?g:n==null?void 0:n.id}`,o({method:"GET"})),{data:t,pending:r,error:d}=await i(`/${a}/`,o({body:{...e==null?void 0:e.value,name:n.name},method:"PUT"}));return{value:t==null?void 0:t.value,deleteSaving:r,error:d.value}},deleteDatasetRow:async n=>{const{error:a}=await i("",o({body:n,method:"DELETE",serviceName:s.DATAMANAGEMENT,serviceMerge:s.DATASETCONTENT}));return{error:a.value}}}}export{P as a,L as b,f as c,S as u};
