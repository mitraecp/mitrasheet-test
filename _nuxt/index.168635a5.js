import f from"./DatabaseTabs.7b50eeb5.js";import{u as x}from"./metadata_store.49c5a48c.js";import{u as v}from"./dimension_store.1aca34b5.js";import{u as D}from"./dataset_store.f318df7c.js";import{u as h}from"./useHeadSettings.f1985dcc.js";import{f as y,H as m,ab as b,b as g,l as S,u as i,c as L,an as M,J as N,o as c,aj as T,a as k}from"./entry.102678be.js";import B from"./DatasetTable.58a40157.js";import I from"./DimensionTable.a32fdf85.js";import"./DatabaseTableList.f9d063c9.js";/* empty css                         */import"./DatabaseAddMenu.6c9815c5.js";import"./MButton.vue.eb72e6c7.js";/* empty css                    */import"./useLegacyService.c9b3bbf8.js";import"./composables.aec528df.js";import"./TableAttributeContextMenu.c1ad8a44.js";/* empty css                           */import"./TableDynamicCell.vue.a471fd36.js";import"./TableCheckbox.vue.071e61a3.js";import"./TableDatePicker.vue.a1333c1a.js";import"./TableAutoComplete.d2339888.js";import"./index.3105222b.js";import"./TableLinkRecord.6de8f04c.js";import"./CollaboratorAvatar.vue.dd08577c.js";import"./index.d52a6416.js";import"./useDataTypeIcons.d26d6eae.js";import"./useAttributeTypes.0411c883.js";import"./DataEntry.class.85823036.js";import"./SmartSheet.02ade0c8.js";import"./DatabaseSmartSheet.a9157bcb.js";import"./TableAttributeMenu.3f27ab4e.js";import"./TableComponentsMenu.b916b5cb.js";import"./useFormRules.a113b67d.js";import"./table_constants.06ca38ff.js";const w={class:"select-none h-[inherit] flex flex-col w-full"},A=y({__name:"index",setup(C){const e=x(),s=v(),d=D(),p=m(()=>e.activeMetadataList),l=m(()=>e.activeIndex),o=m(()=>p.value[l.value]);u();const _=m(()=>T.global.t("DATABASE.new_table"));function u(){h().setHeadTitle("Database");const{openDimension:n,openDataset:r}=b().query;r?d.fetchDatasets().finally(()=>{const a=d.datasets.find(t=>Number(r)===t.id);a?e.addOnMetadataList(a):e.changeQuery(void 0)}):!e.activeMetadataList.length||n?s.fetchDimensions().finally(()=>{const a=s.dimensions.findIndex(t=>n?Number(n)===t.id:!t.isNative);if(a>=0){const t=s.dimensions[a];e.addOnMetadataList(t)}else n?e.changeQuery(void 0):s.addDimension(_.value).then(t=>{e.addOnMetadataList(t)})}):e.changeQuery(o.value)}return(n,r)=>{const a=f;return c(),g("div",w,[S(a),i(p).length?(c(),L(M(i(o).isDimension?I:B),{key:`${i(o).isDimension?"Dim":"Data"}-${i(o).id}`,class:"!p-0 mt-1 h-full",dimension:i(o),dataset:i(o),fixed:1,"display-name":!1,"load-on-created":""},null,8,["dimension","dataset"])):N("",!0)])}}});const ue=k(A,[["__scopeId","data-v-4296e257"]]);export{ue as default};
